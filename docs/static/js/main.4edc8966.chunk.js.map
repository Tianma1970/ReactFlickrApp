{"version":3,"sources":["components/Search.js","components/SearchResult.js","App.js","reportWebVitals.js","index.js"],"names":["Search","state","searchText","errorMessage","handleTextChange","e","setState","target","value","fetchFlickrSearchResult","preventDefault","url","fetch","then","response","json","photoUrls","photos","photo","map","farm","server","id","secret","props","setImages","console","log","className","type","placeholder","onChange","this","onClick","React","Component","SearchResult","displayImages","imageListItem","imageHtmlList","photoUrl","index","alt","src","App","images","fetchedImages","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA2DeA,E,4MAtDbC,MAAQ,CACNC,WAAY,GACZC,aAAc,I,EAGhBC,iBAAmB,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEJ,WAAYG,EAAEE,OAAOC,S,EAE7DC,wBAA0B,SAAAJ,GACxBA,EAAEK,iBACG,EAAKT,MAAMC,YACd,EAAKI,SAAS,CACZH,aAAc,qCAGlB,IAAMQ,EAAM,gJAAkJ,EAAKV,MAAMC,WAEzKU,MAAMD,GACHE,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAE,GAEJ,IAAMC,EAAYD,EAAKE,OAAOC,MAAMC,KAAI,SAAAD,GACtC,MAAM,eAAN,OAAsBA,EAAME,KAA5B,6BAAqDF,EAAMG,OAA3D,YAAqEH,EAAMI,GAA3E,YAAiFJ,EAAMK,OAAvF,aAEF,EAAKC,MAAMC,UAAUT,GACrBU,QAAQC,IAAIX,O,uDAKhB,OACE,qCACE,sBAAKY,UAAU,WAAf,UACE,qBAAKA,UAAU,kBACf,sBAAKA,UAAU,cAAf,UACE,uBAAOC,KAAK,OAAOC,YAAY,8BAA8BF,UAAU,qBAAqBG,SAAUC,KAAK5B,iBAAkBI,MAAOwB,KAAK/B,MAAMC,aAC/I,wBAAQ0B,UAAU,6BAA6BK,QAASD,KAAKvB,wBAA7D,uBAIF,qBAAKmB,UAAU,+BAKjB,qBAAKA,UAAU,uBAEf,qBAAKA,UAAU,yB,GAnDFM,IAAMC,WCmCZC,E,4MAzBbC,cAAgB,SAAArB,GACd,IAAMsB,EAAa,cAAUtB,EAAV,SACbuB,EAAa,yCAAqCD,EAArC,SACnBZ,QAAQC,IAAIY,I,uDAGZ,OACE,qBAAKX,UAAU,gBAAf,SACE,oBAAIA,UAAU,sBAAd,SAGII,KAAKR,MAAMa,cAAclB,KAAI,SAACqB,EAAUC,GACtC,OACE,6BACE,qBAAiBC,IAAI,GAAGC,IAAKH,GAAnBC,gB,GApBDP,IAAMC,WCoBlBS,G,kNAnBb3C,MAAQ,CACN4C,OAAQ,I,EAGVpB,UAAY,SAAAqB,GACV,EAAKxC,SAAS,CACZuC,OAAQC,K,uDAIV,OACE,qCACE,cAAC,EAAD,CAAQrB,UAAWO,KAAKP,YACxB,cAAC,EAAD,CAAcY,cAAeL,KAAK/B,MAAM4C,gB,GAd9BX,IAAMC,YCMTY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4edc8966.chunk.js","sourcesContent":["import React from \"react\"\n\nclass Search extends React.Component {\n  /*Fetch Flickr photos and\n  dispatch handling */\n  state = {\n    searchText: \"\",\n    errorMessage: \"\"\n  }\n\n  handleTextChange = e => this.setState({ searchText: e.target.value })\n\n  fetchFlickrSearchResult = e => {\n    e.preventDefault()\n    if (!this.state.searchText) {\n      this.setState({\n        errorMessage: \"You need to search for something\"\n      })\n    }\n    const url = \"https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=b54580f369a7eeebecb2004dc429d08f&format=json&nojsoncallback=1&text=\" + this.state.searchText\n\n    fetch(url)\n      .then(response => {\n        return response.json()\n      })\n      .then(json => {\n        //console.log(json.photos.photo)\n        const photoUrls = json.photos.photo.map(photo => {\n          return `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}_m.jpg`\n        })\n        this.props.setImages(photoUrls)\n        console.log(photoUrls)\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"controls\">\n          <div className=\"logo__wrapper\"></div>\n          <div className=\"searchfield\">\n            <input type=\"text\" placeholder=\"Search flickr for photos...\" className=\"searchfield__input\" onChange={this.handleTextChange} value={this.state.searchText} />\n            <button className=\"searchfield__submit-button\" onClick={this.fetchFlickrSearchResult}>\n              Search\n            </button>\n          </div>\n          <div className=\"gallery-button__wrapper\">{/* <button className=\"gallery-button\" onClick={this.showGallery}>\n              Show Gallery\n            </button> */}</div>\n        </div>\n\n        <div className=\"message__container\"></div>\n\n        <div className=\"searchresults\"></div>\n      </>\n    )\n  }\n}\n\nexport default Search\n","import React from \"react\"\n/*\n * Search result.\n * Handles searching flickr for photos and\n * displaying and selecting photos.\n */\nclass SearchResult extends React.Component {\n  /*\n   * Fetch flickr photos and dispath handling\n   * of the response.\n   */\n\n  displayImages = photoUrls => {\n    const imageListItem = `<li>${photoUrls}</li>`\n    const imageHtmlList = `<ul class=\"searchresults-list\">${imageListItem}</ul>`\n    console.log(imageHtmlList)\n  }\n  render() {\n    return (\n      <div className=\"searchresults\">\n        <ul className=\"searchresults__list\">\n          {\n            // Map over displayImages and return list of <img src={photoUrl}>.\n            this.props.displayImages.map((photoUrl, index) => {\n              return (\n                <li>\n                  <img key={index} alt=\"\" src={photoUrl} />\n                </li>\n              )\n            })\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default SearchResult\n","import React from \"react\"\n\nimport Search from \"./components/Search\"\nimport SearchResult from \"./components/SearchResult\"\nimport \"./App.css\"\n\nclass App extends React.Component {\n  state = {\n    images: []\n  }\n\n  setImages = fetchedImages => {\n    this.setState({\n      images: fetchedImages\n    })\n  }\n  render() {\n    return (\n      <>\n        <Search setImages={this.setImages} />\n        <SearchResult displayImages={this.state.images} />\n      </>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}